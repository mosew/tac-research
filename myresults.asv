clear

load('ZD_Data_5122_minutes.mat');
load('0416_26splhr_M01_1training_alltesteps.mat','b');

training_list = nchoosek(1:9,2);


b=permute(b(1,1,:,:),[3,4,1,2]);

n = numel(b);
s = size(b);
e = 1:9;


% We test only on episodes not included in the training data
test_ = @(training,test) all(training~=test');

testing_array = zeros(s);

q1=zeros(s);
q2=zeros(s);
L2_error = zeros(s);
Linf_error=zeros(s);
AUC_error_sq=zeros(s);
peak_time_error_sq=zeros(s);
peak_height_error_sq=zeros(s);




q2_mean = zeros(1,9);
q2_sd = zeros(1,9);
q1_mean = zeros(1,9);
q1_sd = zeros(1,9);

% To gather data on mean error per test episode.
L2_test_mean = zeros(1,9);
L2_test_sd = zeros(1,9);
Linf_test_mean = zeros(1,9);
Linf_test_sd = zeros(1,9);
AUC_sq_test_mean = zeros(1,9);
AUC_sq_test_sd = zeros(1,9);
peaktime_sq_test_mean = zeros(1,9);
peaktime_sq_test_sd = zeros(1,9);
peakheight_sq_test_mean = zeros(1,9);
peakheight_sq_test_sd = zeros(1,9);




for trainInd = 1:size(b,1)

    for test = 1:9
            
        r = b{trainInd,test};
        parms = r.trained_parameters;
        q2(trainInd,test) = parms(1);
        q1(trainInd,test) = parms(2);
        L2_error(trainInd,test) = r.L2_error;
        Linf_error(trainInd,test)= r.Linf_error;
        AUC_error_sq(trainInd,test)= r.AUC_sq_error;
        peak_time_error_sq(trainInd,test) = r.peak_time_sq_error;
        peak_height_error_sq(trainInd,test)=r.peak_height_sq_error;
    
        
        % If test is not one of the episodes that was trained on,
        if test_(training,test)
            testing_array(training,test)=1;
        end
            
        
        
    end

end

% Here we want them all; we're not collecting error.
for test = 1:9
    q2_mean(test) = mean(q2(:,test));
    q2_sd(test) = std(q2(:,test));
    q1_mean(test) = mean(q1(:,test));
    q1_sd(test) = std(q1(:,test));
end


ntest = sum(sum(testing_array));
ntrain = n - ntest;

% To gather training data.
L2_training = zeros(ntrain,1);
Linf_training = zeros(ntrain,1);
AUC_sq_training = zeros(ntrain,1);
peaktime_sq_training = zeros(ntrain,1);
peakheight_sq_training = zeros(ntrain,1);


for trainInd = 1:size(b,1);
    training = training_list(trainInd,:);
    L2_training(trainInd) = mean(L2_error(training,training));
        

L2_test_mean(test)=mean(reshape(L2_error(testing_array),ntest,1));
L2_test_sd(test)=std(reshape(L2_error(testing_array),ntest,1));
Linf_test_mean(test)=mean(reshape(Linf_error(testing_array),ntest,1));
Linf_test_sd(test)=std(reshape(Linf_error(testing_array),ntest,1));
AUC_sq_test_mean(test)=mean(reshape(AUC_error_sq(testing_array),ntest,1));
AUC_sq_test_sd(test)=std(reshape(AUC_error_sq(testing_array),ntest,1));
peaktime_sq_test_mean(test)=mean(reshape(peak_time_error_sq(testing_array),ntest,1));
peaktime_sq_test_sd(test)=std(reshape(peak_time_error_sq(testing_array),ntest,1));
peakheight_sq_test_mean(test)=mean(reshape(peak_height_error_sq(testing_array),ntest,1));
peakheight_sq_test_sd(test)=std(reshape(peak_height_error_sq(testing_array),ntest,1));


L2_training(test) = L2_error(test,test);
Linf_training(test) = Linf_error(test,test);
AUC_sq_training(test) = AUC_error_sq(test,test);
peaktime_sq_training(test) = peak_time_error_sq(test,test);
peakheight_sq_training(test) = peak_height_error_sq(test,test);

    




% Plot results
%
% for test = 1:9
%     x = dataG_episodes{1,test};
%     subplot(3,3,test);
%     plot(x.full_deconvolved_BrAC-x.actual_error,'k--');
%     hold on
%     for train = 1:9
%         y = dataG_episodes{train,test};
%         plot(y.full_deconvolved_BrAC);
%     end
% end


% Now we need the overall mean and stds
n=81-9;
overall_q2 = [mean(q2_mean),std(reshape(q2,81,1))];
overall_q1 = [mean(q1_mean),std(reshape(q1,81,1))];
test_L2 = [mean(L2_test_mean),std(reshape(L2_error(testing),n,1))];
test_Linf = [mean(Linf_test_mean),std(reshape(Linf_error(testing),n,1))];
test_AUC_sq = [mean(AUC_sq_test_mean),std(reshape(AUC_error_sq(testing),n,1))];
test_peaktime_sq = [mean(peaktime_sq_test_mean),std(reshape(peak_time_error_sq(testing),n,1))];
test_peakheight_sq = [mean(peakheight_sq_test_mean),std(reshape(peak_height_error_sq(testing),n,1))];

training_L2 = [mean(L2_training),std(L2_training)];
training_Linf = [mean(Linf_training),std(Linf_training)];
training_AUC_sq = [mean(AUC_sq_training),std(AUC_sq_training)];
training_peaktime_sq = [mean(peaktime_sq_training),std(peaktime_sq_training)];
training_peakheight_sq = [mean(peakheight_sq_training),std(peakheight_sq_training)];

tr_data = [training_AUC_sq,training_peakheight_sq,training_peaktime_sq,training_L2,training_Linf];
te_data = [test_AUC_sq,test_peakheight_sq,test_peaktime_sq,test_L2,test_Linf];

save('my_results_1training_M0_2splhr.mat');

