# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# 

    
@function
def condition(epsilon=None,T=None,lumF=None,lumC=None,i=None,*args,**kwargs):
    varargin = condition.varargin
    nargin = condition.nargin

    fiFsq=lambda t=None: feval(lumF[i],t) ** 2
# pillonetto_bell/src/condition.m:3
    fiFminusfiCsq=lambda t=None: (feval(lumF[i],t) - feval(lumC[i],t)) ** 2
# pillonetto_bell/src/condition.m:4
    bool=dot(epsilon ** 2,integral(fiFsq,0,T)) >= integral(fiFminusfiCsq,0,T)
# pillonetto_bell/src/condition.m:6
    return bool
    
if __name__ == '__main__':
    pass
    