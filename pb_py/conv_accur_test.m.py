# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# 

    theta=matlabarray(cat(exp(1),2))
# pillonetto_bell/src/conv_accur_test.m:1
    tau=1 / 50
# pillonetto_bell/src/conv_accur_test.m:2
    g=lambda s=None: exp(dot(- theta[2],s))
# pillonetto_bell/src/conv_accur_test.m:4
    f=lambda s=None: dot(2,sin(dot(s,8)))
# pillonetto_bell/src/conv_accur_test.m:5
    N=dot(4,10 ** 3)
# pillonetto_bell/src/conv_accur_test.m:7
    t=arange(tau,1,(tau / N))
# pillonetto_bell/src/conv_accur_test.m:8
    gsamp=exp(multiply(- theta[2],t))
# pillonetto_bell/src/conv_accur_test.m:10
    fsamp=feval(f,t)
# pillonetto_bell/src/conv_accur_test.m:11
    output=dot(conv(fsamp,gsamp,'full'),tau) / N
# pillonetto_bell/src/conv_accur_test.m:12
    output=output[1:N:(dot(50,N) + 1)]
# pillonetto_bell/src/conv_accur_test.m:13
    plot(output)
    hold('on')
    outty=zeros(1,50)
# pillonetto_bell/src/conv_accur_test.m:17
    for i in arange(1,50).reshape(-1):
        fxg=lambda s=None: multiply(feval(f,s),feval(g,dot(i,tau) - s))
# pillonetto_bell/src/conv_accur_test.m:19
        outty[i]=integral(fxg,0,dot(i,tau))
# pillonetto_bell/src/conv_accur_test.m:20
    
    plot(outty)
    #legend('Discrete','Continuous')