# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# 

    
@function
def d2Lmatrix(theta=None,P=None,n=None,Lmatrix=None,*args,**kwargs):
    varargin = d2Lmatrix.varargin
    nargin = d2Lmatrix.nargin

    # OUTPUT:
    # P x n x nTheta x nTheta matrix, where
    
    # d2Lmatrix(j,i,s,r) = d^2 L_i(th,phi_j) / dth_s dth_r
    
    # FOR EXAMPLE 7.2 FROM PILLONETTO-BELL
    
    nTheta=length(theta)
# pillonetto_bell/src/example72_inputs/d2Lmatrix.m:9
    d2Lmatrix=zeros(P,n,nTheta,nTheta)
# pillonetto_bell/src/example72_inputs/d2Lmatrix.m:11
    d2Lmatrix[:,:,1,2]=dot(dot(- 2,theta[2]) / theta[1],Lmatrix)
# pillonetto_bell/src/example72_inputs/d2Lmatrix.m:13
    d2Lmatrix[:,:,2,1]=d2Lmatrix[:,:,1,2]
# pillonetto_bell/src/example72_inputs/d2Lmatrix.m:14
    d2Lmatrix[:,:,2,2]=dot((dot(4,theta[2] ** 2) - 2),Lmatrix)
# pillonetto_bell/src/example72_inputs/d2Lmatrix.m:16
    return d2Lmatrix
    
if __name__ == '__main__':
    pass
    