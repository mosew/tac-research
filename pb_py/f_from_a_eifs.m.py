# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# 

    
@function
def f_from_a_eifs(a=None,eifs=None,*args,**kwargs):
    varargin = f_from_a_eifs.varargin
    nargin = f_from_a_eifs.nargin

    # INPUTS:
    # a is a 1xP vector of coefficients
    # eifs is a Px1 cell array of eigenfunction handles
    
    # OUTPUTS:
    # f is a function handle representing 
    #       f(t) = sum_{j=1}^P   a_j * phi_j(t)
    f=lambda s=None: dot(a,cell2mat(cellfun(lambda c=None: feval(c,s),eifs,'UniformOutput',false)))
# pillonetto_bell/src/f_from_a_eifs.m:10
    return f
    
if __name__ == '__main__':
    pass
    