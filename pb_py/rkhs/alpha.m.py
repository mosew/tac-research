# Autogenerated with SMOP 0.32-7-gcce8558
from smop.core import *
# 

    
@function
def alpha(js=None,*args,**kwargs):
    varargin = alpha.varargin
    nargin = alpha.nargin

    # For 2nd Green's kernel calculation
    # Gives array of alpha_j for prescribed j values in vector js
    fun=lambda x=None: 1 / cosh(x) + cos(x)
# pillonetto_bell/src/rkhs/alpha.m:4
    a=zeros(1,length(js))
# pillonetto_bell/src/rkhs/alpha.m:5
    for j in arange(1,length(js)).reshape(-1):
        a[j]=fzero(fun,dot((js[j] - 1 / 2),pi))
# pillonetto_bell/src/rkhs/alpha.m:7
    
    return a
    
if __name__ == '__main__':
    pass
    